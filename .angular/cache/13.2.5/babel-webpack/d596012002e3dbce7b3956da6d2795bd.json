{"ast":null,"code":"import _asyncToGenerator from \"/Users/dominic.retli/Documents/github-projects/student-discipline/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { StudentDisciplineComponent } from './student-discipline.component';\nimport { BrowserModule, By } from \"@angular/platform-browser\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { StudentDisciplineService } from \"../student-discipline.service\";\nimport { of } from \"rxjs\";\ndescribe('DetentionReportComponentComponent', () => {\n  let component;\n  let fixture;\n  const student1 = {\n    firstName: 'bob',\n    lastName: 'ross',\n    id: '111',\n    parentPhoneNumber: '555-5555',\n    priorViolations: 0\n  };\n  const student2 = {\n    firstName: 'cindy',\n    lastName: 'waters',\n    id: '222',\n    parentPhoneNumber: '555-5555',\n    priorViolations: 1\n  };\n  const studentDisciplineServiceSpy = jasmine.createSpyObj('StudentDisciplineService', ['getStudents']);\n  studentDisciplineServiceSpy.getStudents.and.returnValue(of([student1, student2]));\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [BrowserModule, FormsModule, ReactiveFormsModule],\n      providers: [{\n        provide: StudentDisciplineService,\n        useValue: studentDisciplineServiceSpy\n      }],\n      declarations: [StudentDisciplineComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(StudentDisciplineComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should setup initial form with correct form controls', () => {\n    const expectedFormValue = {\n      student: '',\n      violation: '',\n      punishment: ''\n    };\n    expect(component.form.value).toEqual(expectedFormValue);\n  });\n  describe('ngOnInit', () => {\n    it('should call getStudents from the StudentDisciplineService and set the response to the components students array property', () => {\n      const expectedStudents = [student1, student2];\n      expect(component.students).toEqual(expectedStudents);\n      expect(studentDisciplineServiceSpy.getStudents).toHaveBeenCalled();\n    });\n  });\n  it('should display student select element', () => {\n    const studentSelect = fixture.debugElement.query(By.css('#student'));\n    expect(studentSelect).toBeTruthy();\n  });\n  it('should display violation input element', () => {\n    const violationInput = fixture.debugElement.query(By.css('#violation'));\n    expect(violationInput).toBeTruthy();\n  });\n  it('should display selected punishment dropdown selection element', () => {\n    const punishmentDropdownSelection = fixture.debugElement.query(By.css('#punishment'));\n    expect(punishmentDropdownSelection).toBeTruthy();\n  });\n  it('should display option for each student in the student dropdown', () => {\n    component.students = [student1, student2];\n    const studentSelect = fixture.debugElement.query(By.css('#student'));\n    const options = studentSelect.queryAll(By.css('option'));\n    expect(options.length).toEqual(2);\n    const expectedText1 = student1.firstName + ' ' + student1.lastName;\n    expect(options[0].nativeElement.textContent).toEqual(expectedText1);\n  });\n  it('should display option for each punishment in the punishment dropdown', () => {\n    component.punishments = [punishment1, punishment2];\n  });\n});","map":{"version":3,"sources":["/Users/dominic.retli/Documents/github-projects/student-discipline/src/app/student-discipline-component/student-discipline.component.spec.ts"],"names":["TestBed","StudentDisciplineComponent","BrowserModule","By","FormsModule","ReactiveFormsModule","StudentDisciplineService","of","describe","component","fixture","student1","firstName","lastName","id","parentPhoneNumber","priorViolations","student2","studentDisciplineServiceSpy","jasmine","createSpyObj","getStudents","and","returnValue","beforeEach","configureTestingModule","imports","providers","provide","useValue","declarations","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","expectedFormValue","student","violation","punishment","form","value","toEqual","expectedStudents","students","toHaveBeenCalled","studentSelect","debugElement","query","css","violationInput","punishmentDropdownSelection","options","queryAll","length","expectedText1","nativeElement","textContent","punishments","punishment1","punishment2"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,aAAT,EAAwBC,EAAxB,QAAkC,2BAAlC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,gBAAjD;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACAC,QAAQ,CAAC,mCAAD,EAAsC,MAAM;AAChD,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,SAAS,EAAE,KADE;AAEbC,IAAAA,QAAQ,EAAE,MAFG;AAGbC,IAAAA,EAAE,EAAE,KAHS;AAIbC,IAAAA,iBAAiB,EAAE,UAJN;AAKbC,IAAAA,eAAe,EAAE;AALJ,GAAjB;AAOA,QAAMC,QAAQ,GAAG;AACbL,IAAAA,SAAS,EAAE,OADE;AAEbC,IAAAA,QAAQ,EAAE,QAFG;AAGbC,IAAAA,EAAE,EAAE,KAHS;AAIbC,IAAAA,iBAAiB,EAAE,UAJN;AAKbC,IAAAA,eAAe,EAAE;AALJ,GAAjB;AAOA,QAAME,2BAA2B,GAAGC,OAAO,CAACC,YAAR,CAAqB,0BAArB,EAAiD,CAAC,aAAD,CAAjD,CAApC;AACAF,EAAAA,2BAA2B,CAACG,WAA5B,CAAwCC,GAAxC,CAA4CC,WAA5C,CAAwDhB,EAAE,CAAC,CAACI,QAAD,EAAWM,QAAX,CAAD,CAA1D;AACAO,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMxB,OAAO,CAACyB,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CAACxB,aAAD,EAAgBE,WAAhB,EAA6BC,mBAA7B,CADwB;AAEjCsB,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,OAAO,EAAEtB,wBAAX;AAAqCuB,QAAAA,QAAQ,EAAEX;AAA/C,OADO,CAFsB;AAKjCY,MAAAA,YAAY,EAAE,CAAC7B,0BAAD;AALmB,KAA/B,EAOD8B,iBAPC,EAAN;AAQH,GATS,EAAV;AAUAP,EAAAA,UAAU,CAAC,MAAM;AACbd,IAAAA,OAAO,GAAGV,OAAO,CAACgC,eAAR,CAAwB/B,0BAAxB,CAAV;AACAQ,IAAAA,SAAS,GAAGC,OAAO,CAACuB,iBAApB;AACAvB,IAAAA,OAAO,CAACwB,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAAC3B,SAAD,CAAN,CAAkB4B,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,sDAAD,EAAyD,MAAM;AAC7D,UAAMG,iBAAiB,GAAG;AACtBC,MAAAA,OAAO,EAAE,EADa;AAEtBC,MAAAA,SAAS,EAAE,EAFW;AAGtBC,MAAAA,UAAU,EAAE;AAHU,KAA1B;AAKAL,IAAAA,MAAM,CAAC3B,SAAS,CAACiC,IAAV,CAAeC,KAAhB,CAAN,CAA6BC,OAA7B,CAAqCN,iBAArC;AACH,GAPC,CAAF;AAQA9B,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACvB2B,IAAAA,EAAE,CAAC,0HAAD,EAA6H,MAAM;AACjI,YAAMU,gBAAgB,GAAG,CAAClC,QAAD,EAAWM,QAAX,CAAzB;AACAmB,MAAAA,MAAM,CAAC3B,SAAS,CAACqC,QAAX,CAAN,CAA2BF,OAA3B,CAAmCC,gBAAnC;AACAT,MAAAA,MAAM,CAAClB,2BAA2B,CAACG,WAA7B,CAAN,CAAgD0B,gBAAhD;AACH,KAJC,CAAF;AAKH,GANO,CAAR;AAOAZ,EAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAC9C,UAAMa,aAAa,GAAGtC,OAAO,CAACuC,YAAR,CAAqBC,KAArB,CAA2B/C,EAAE,CAACgD,GAAH,CAAO,UAAP,CAA3B,CAAtB;AACAf,IAAAA,MAAM,CAACY,aAAD,CAAN,CAAsBX,UAAtB;AACH,GAHC,CAAF;AAIAF,EAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AAC/C,UAAMiB,cAAc,GAAG1C,OAAO,CAACuC,YAAR,CAAqBC,KAArB,CAA2B/C,EAAE,CAACgD,GAAH,CAAO,YAAP,CAA3B,CAAvB;AACAf,IAAAA,MAAM,CAACgB,cAAD,CAAN,CAAuBf,UAAvB;AACH,GAHC,CAAF;AAIAF,EAAAA,EAAE,CAAC,+DAAD,EAAkE,MAAM;AACtE,UAAMkB,2BAA2B,GAAG3C,OAAO,CAACuC,YAAR,CAAqBC,KAArB,CAA2B/C,EAAE,CAACgD,GAAH,CAAO,aAAP,CAA3B,CAApC;AACAf,IAAAA,MAAM,CAACiB,2BAAD,CAAN,CAAoChB,UAApC;AACH,GAHC,CAAF;AAIAF,EAAAA,EAAE,CAAC,gEAAD,EAAmE,MAAM;AACvE1B,IAAAA,SAAS,CAACqC,QAAV,GAAqB,CAACnC,QAAD,EAAWM,QAAX,CAArB;AACA,UAAM+B,aAAa,GAAGtC,OAAO,CAACuC,YAAR,CAAqBC,KAArB,CAA2B/C,EAAE,CAACgD,GAAH,CAAO,UAAP,CAA3B,CAAtB;AACA,UAAMG,OAAO,GAAGN,aAAa,CAACO,QAAd,CAAuBpD,EAAE,CAACgD,GAAH,CAAO,QAAP,CAAvB,CAAhB;AACAf,IAAAA,MAAM,CAACkB,OAAO,CAACE,MAAT,CAAN,CAAuBZ,OAAvB,CAA+B,CAA/B;AACA,UAAMa,aAAa,GAAG9C,QAAQ,CAACC,SAAT,GAAqB,GAArB,GAA2BD,QAAQ,CAACE,QAA1D;AACAuB,IAAAA,MAAM,CAACkB,OAAO,CAAC,CAAD,CAAP,CAAWI,aAAX,CAAyBC,WAA1B,CAAN,CAA6Cf,OAA7C,CAAqDa,aAArD;AACH,GAPC,CAAF;AAQAtB,EAAAA,EAAE,CAAC,sEAAD,EAAyE,MAAM;AAC7E1B,IAAAA,SAAS,CAACmD,WAAV,GAAwB,CAACC,WAAD,EAAcC,WAAd,CAAxB;AACH,GAFC,CAAF;AAGH,CA3EO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { StudentDisciplineComponent } from './student-discipline.component';\nimport { BrowserModule, By } from \"@angular/platform-browser\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { StudentDisciplineService } from \"../student-discipline.service\";\nimport { of } from \"rxjs\";\ndescribe('DetentionReportComponentComponent', () => {\n    let component;\n    let fixture;\n    const student1 = {\n        firstName: 'bob',\n        lastName: 'ross',\n        id: '111',\n        parentPhoneNumber: '555-5555',\n        priorViolations: 0\n    };\n    const student2 = {\n        firstName: 'cindy',\n        lastName: 'waters',\n        id: '222',\n        parentPhoneNumber: '555-5555',\n        priorViolations: 1\n    };\n    const studentDisciplineServiceSpy = jasmine.createSpyObj('StudentDisciplineService', ['getStudents']);\n    studentDisciplineServiceSpy.getStudents.and.returnValue(of([student1, student2]));\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [BrowserModule, FormsModule, ReactiveFormsModule],\n            providers: [\n                { provide: StudentDisciplineService, useValue: studentDisciplineServiceSpy }\n            ],\n            declarations: [StudentDisciplineComponent]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(StudentDisciplineComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should setup initial form with correct form controls', () => {\n        const expectedFormValue = {\n            student: '',\n            violation: '',\n            punishment: ''\n        };\n        expect(component.form.value).toEqual(expectedFormValue);\n    });\n    describe('ngOnInit', () => {\n        it('should call getStudents from the StudentDisciplineService and set the response to the components students array property', () => {\n            const expectedStudents = [student1, student2];\n            expect(component.students).toEqual(expectedStudents);\n            expect(studentDisciplineServiceSpy.getStudents).toHaveBeenCalled();\n        });\n    });\n    it('should display student select element', () => {\n        const studentSelect = fixture.debugElement.query(By.css('#student'));\n        expect(studentSelect).toBeTruthy();\n    });\n    it('should display violation input element', () => {\n        const violationInput = fixture.debugElement.query(By.css('#violation'));\n        expect(violationInput).toBeTruthy();\n    });\n    it('should display selected punishment dropdown selection element', () => {\n        const punishmentDropdownSelection = fixture.debugElement.query(By.css('#punishment'));\n        expect(punishmentDropdownSelection).toBeTruthy();\n    });\n    it('should display option for each student in the student dropdown', () => {\n        component.students = [student1, student2];\n        const studentSelect = fixture.debugElement.query(By.css('#student'));\n        const options = studentSelect.queryAll(By.css('option'));\n        expect(options.length).toEqual(2);\n        const expectedText1 = student1.firstName + ' ' + student1.lastName;\n        expect(options[0].nativeElement.textContent).toEqual(expectedText1);\n    });\n    it('should display option for each punishment in the punishment dropdown', () => {\n        component.punishments = [punishment1, punishment2];\n    });\n});\n"]},"metadata":{},"sourceType":"module"}